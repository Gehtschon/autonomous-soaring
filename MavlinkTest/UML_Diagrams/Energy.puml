@startuml





/' Objects '/

class Energy {
	+Energy(float energy)
	+Energy(float energy, int32_t lat, int32_t lon)
	+Energy()
	+operator*(float scalar) : Energy {query}
	+operator+(const Energy& other) : Energy {query}
	+operator-(const Energy& other) : Energy {query}
	+operator/(float divisor) : Energy {query}
	+operator*=(float scalar) : Energy&
	+operator++() : Energy&
	+operator+=(const Energy& other) : Energy&
	+operator--() : Energy&
	+operator-=(const Energy& other) : Energy&
	+operator/=(float divisor) : Energy&
	+operator!=(const Energy& other) : bool {query}
	+operator<(const Energy& other) : bool {query}
	+operator<=(const Energy& other) : bool {query}
	+operator==(const Energy& other) : bool {query}
	+operator>(const Energy& other) : bool {query}
	+operator>=(const Energy& other) : bool {query}
	-Energyvalue : float
	+getEnergyvalue() : float {query}
	+getLat() : int32_t {query}
	+getLon() : int32_t {query}
	-lat : int32_t
	-lon : int32_t
	+getTimeMilliSeconds() : long {query}
	-time_MilliSeconds : std::chrono::milliseconds::rep
	-createtimestamp() : void
	+setEnergyvalue(float energyvalue) : void
	+setLat(int32_t lat) : void
	+setLon(int32_t lon) : void
	+setTimeMilliSeconds(long timeSeconds) : void
}





/' Inheritance relationships '/




/' Aggregation relationships '/





/' Dependency relationships '/

.Energy <.. .Energy


.Energy <.. .Energy


.Energy <.. .Energy


.Energy <.. .Energy


.Energy <.. .Energy


.Energy <.. .Energy


.Energy <.. .Energy


.Energy <.. .Energy


.Energy <.. .Energy


.Energy <.. .Energy






/' Nested objects '/



@enduml
